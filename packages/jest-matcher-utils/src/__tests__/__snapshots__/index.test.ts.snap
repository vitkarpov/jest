// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.ensureNoExpected() throws error when expected is not undefined with matcherName 1`] = `
"expect(received)[.not].toBeDefined()

Matcher error: this matcher must not have an expected argument

Expected has type:  object
Expected has value: {\\"a\\": 1}"
`;

exports[`.ensureNoExpected() throws error when expected is not undefined with matcherName and options 1`] = `
"expect(received).not.toBeDefined()

Matcher error: this matcher must not have an expected argument

Expected has type:  object
Expected has value: {\\"a\\": 1}"
`;

exports[`.ensureNumbers() throws error when expected is not a number 1`] = `
"expect(received)[.not]This matcher(expected)

Matcher error: expected value must be a number

Expected has type:  string
Expected has value: \\"not_a_number\\""
`;

exports[`.ensureNumbers() throws error when received is not a number 1`] = `
"expect(received)[.not]This matcher(expected)

Matcher error: received value must be a number

Received has type:  string
Received has value: \\"not_a_number\\""
`;

exports[`.stringify() reduces maxDepth if stringifying very large objects 1`] = `"{\\"a\\": 1, \\"b\\": [Object]}"`;

exports[`.stringify() reduces maxDepth if stringifying very large objects 2`] = `"{\\"a\\": 1, \\"b\\": {\\"0\\": \\"test\\", \\"1\\": \\"test\\", \\"2\\": \\"test\\", \\"3\\": \\"test\\", \\"4\\": \\"test\\", \\"5\\": \\"test\\", \\"6\\": \\"test\\", \\"7\\": \\"test\\", \\"8\\": \\"test\\", \\"9\\": \\"test\\"}}"`;

exports[`.stringify() toJSON errors when comparing two objects 1`] = `
"expect(received).toEqual(expected)

Difference:

- Expected
+ Received

  Object {
-   \\"b\\": 1,
+   \\"a\\": 1,
    \\"toJSON\\": [Function toJSON],
  }"
`;
